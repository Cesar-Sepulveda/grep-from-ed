const int BLKSIZE=4096, NBLK=2047, NULL=0, LBSIZE=4096, FNSIZE=128;
const int ESIZE=256, GBSIZE=256, NBRA=5, EOF=-1, CBRA=1, CCHR=2;
const int CDOT=4, CCL=6, NCCL=8, CDOL=10, CEOF=11, CKET=12, CBACK=14;
const int CCIRC=15, STAR=01, READ=0, WRITE=1, SIGHUP=1, ARGC_ERROR=0, BUFSIZE=100;
typedef void	(*SIG_TYP)(int);
char	Q[]	= "", T[]	= "TMP", ibuff[BLKSIZE], genbuf[LBSIZE];
char obuff[BLKSIZE], inputbuf[GBSIZE], buf[BUFSIZE], line[70];
int	peekc, lastc, given, ninbuf, io, pflag, oflag, listf, listn, col;
int tline, ichanged, nleft, anymarks, nbra, subnewa, fchange, wrapp, bufp = 0;
char	savedfile[FNSIZE], file[FNSIZE], linebuf[LBSIZE], expbuf[ESIZE+4];
unsigned int	*addr1, *addr2, *dot, *dol, *zero;
long	count;
char	*nextip,	*linebp, *globp, *tfname, *loc1, *loc2, *linp	= line;
int	vflag	= 1, tfile	= -1, iblock	= -1, oblock	= -1;
char	WRERR[]	= "WRITE ERROR", tmpXXXXX[50] = "/tmp/eXXXXX";
int	names[26];
char	*braslist[NBRA], *braelist[NBRA];
unsigned nlall = 128;
char	*mktemp(char *);
long	lseek(int, long, int);
int	close(int);
char *getblock(unsigned int atl, int iof);
char *getline_blk(unsigned int tl);
int advance(char *lp, char *ep);
int append(int (*f)(void), unsigned int *a);
int backref(int i, char *lp);
void blkio(int b, char *buf, long (*iofcn)(int, void*, unsigned long));
int cclass(char *set, int c, int af);
void compile(int eof);
void error(char *s);
int execute(unsigned int *addr);
void exfile(void);
void filename(const char *comm);
int getchr(void);
int getfile(void);
int getnum(void);
void global(int k);
void init(void);
void onhup(int n);
void putchr_(int ac);
void putd(void);
void putfile(void);
int putline(void);
void puts_(char *sp);
void quit(int n);
void setwide(void);
void setnoaddr(void);
void squeeze(int i);
void readfile(const char *);
void print(void);
void newline(void);
unsigned int* address(void);
int getnum(void);
void search(const char* re);
void ungetch_(int c);
int getch_(void);
void drawline(void);
void search_file(const char* filename, const char* searchfor);
void process_dir(const char* dir, const char* searchfor, void (*fp)(const char*, const char*));
void printcommand(void);
